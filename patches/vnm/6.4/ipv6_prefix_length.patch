--- remotes/vnm/security_groups_iptables.rb.orig
+++ remotes/vnm/security_groups_iptables.rb
@@ -413,7 +413,11 @@
 
             [:ip6, :ip6_global, :ip6_ula].each do |ip6|
                 if !nic[ip6].nil?
-                    nri6s << "-I #{GLOBAL_CHAIN} -d #{nic[ip6]} -j #{chain_in}"
+                    ipv6 = nic[ip6]
+                    ipv6 += "/#{nic[:ipset_prefix_length]}"\
+                        if ip6 == :ip6 && !nic[:ipset_prefix_length].nil? &&\
+                           !nic[:ipset_prefix_length].empty?
+                    nri6s << "-I #{GLOBAL_CHAIN} -d #{ipv6} -j #{chain_in}"
                 end
             end
 
@@ -425,7 +429,11 @@
 
                 [:ip6, :ip6_global, :ip6_ula].each do |ip6|
                     if !nic_alias[ip6].nil?
-                        nri6s << "-I #{GLOBAL_CHAIN} -d #{nic_alias[ip6]} "\
+                        ipv6 = nic_alias[ip6]
+                        ipv6 += "/#{nic_alias[:ipset_prefix_length]}"\
+                            if ip6 == :ip6 && !nic_alias[:ipset_prefix_length].nil? &&\
+                               !nic_alias[:ipset_prefix_length].empty?
+                        nri6s << "-I #{GLOBAL_CHAIN} -d #{ipv6} "\
                                  "-j #{chain_in}"
                     end
                 end
@@ -508,19 +516,35 @@
                                     "--match-set #{set} src -j DROP"
 
             ipv6s = Array.new
+            ipset_hash = "hash:ip"
 
             [:ip6, :ip6_global, :ip6_link, :ip6_ula, :vrouter_ip6, :vrouter_ip6_global, :vrouter_ip6_link, :vrouter_ip6_ula].each do |key|
-                ipv6s << nic[key] if !nic[key].nil? && !nic[key].empty?
+                if !nic[key].nil? && !nic[key].empty?
+                    ipv6 = nic[key]
+                    if key == :ip6 && !nic[:ipset_prefix_length].nil? &&\
+                           !nic[:ipset_prefix_length].empty?
+                        ipv6 += "/#{nic[:ipset_prefix_length]}"
+                        ipset_hash = "hash:net"
+                    end
+                    ipv6s << ipv6
+                end
 
                 vars[:nics_alias].each do |nic_alias|
-                    ipv6s << nic_alias[key] \
-                        if !nic_alias[key].nil? && !nic_alias[key].empty?
+                    if !nic_alias[key].nil? && !nic_alias[key].empty?
+                        ipv6 = nic_alias[key]
+                        if key == :ip6 && !nic_alias[:ipset_prefix_length].nil? &&\
+                               !nic_alias[:ipset_prefix_length].empty?
+                            ipv6 += "/#{nic_alias[:ipset_prefix_length]}"
+                            ipset_hash = "hash:net"
+                        end
+                        ipv6s << ipv6
+                    end
                 end
             end
 
             set = "#{vars[:chain]}-ip6-spoofing"
 
-            commands.add :ipset, "create #{set} hash:ip family inet6"
+            commands.add :ipset, "create #{set} #{ipset_hash} family inet6"
 
             ipv6s.each do |ip|
                 commands.add :ipset, "add -exist #{set} #{ip}"
@@ -644,8 +668,12 @@
         set = "#{chain}-ip6-spoofing"
         [:ip6, :ip6_global, :ip6_ula].each do |ip6|
             next if nic[ip6].nil?
+            ip6net = nic[ip6]
+            ip6net += "/#{nic[:ipset_prefix_length]}"\
+                if ip6 == :ip6 && !nic[:ipset_prefix_length].nil? &&\
+                   !nic[:ipset_prefix_length].empty?
 
-            commands.add :ipset, "-q add -exist #{set} #{nic[ip6]} | true"
+            commands.add :ipset, "-q add -exist #{set} #{ip6net} | true"
         end
 
         # Enable SG. Only needed for routed chain input jump since destination
@@ -719,8 +747,11 @@
         set = "#{chain}-ip6-spoofing"
         [:ip6, :ip6_global, :ip6_ula].each do |ip6|
             next if nic[ip6].nil?
-
-            commands.add :ipset, "-q del -exist #{set} #{nic[ip6]} | true"
+            ipv6 = nic[ip6]
+            ipv6 += "/#{nic[:ipset_prefix_length]}"\
+              if ip6 == :ip6 && !nic[:ipset_prefix_length].nil?\
+                  && !nic[:ipset_prefix_length].empty?
+            commands.add :ipset, "-q del -exist #{set} #{ipv6} | true"
         end
 
         # Disable SG. Only needed for routed chain input jump.
